import{y as x}from"./md-editor-v3-4dc8f55b.js";import"./@lezer-42a0dbdf.js";import"./markdown-it-147551b9.js";import{b as M,c as S}from"./index-54c8dad2.js";import{d as u,j as c,l as _,a8 as w,u as a,f as y,O as E,a as O}from"./@vue-b1321081.js";import"./@vavt-c7853335.js";import"./codemirror-535e6aa3.js";import"./@codemirror-f87e1e31.js";import"./style-mod-fd510d21.js";import"./w3c-keyname-9fb136d3.js";import"./medium-zoom-2b22670e.js";import"./copy-to-clipboard-162cd214.js";import"./@babel-31db5498.js";import"./toggle-selection-93f4ad84.js";import"./markdown-it-image-figures-6b4113de.js";import"./markdown-it-task-lists-1de1840c.js";import"./lru-cache-ba592fc4.js";import"./entities-170e234c.js";import"./uc.micro-740ead6f.js";import"./mdurl-79eba04e.js";import"./linkify-it-191b779c.js";import"./punycode-07b00e8a.js";import"./@vueuse-d91fccee.js";import"./pinia-44adfabd.js";import"./vue-demi-71ba0ef2.js";import"./vue-i18n-d9dd9a4c.js";import"./@intlify-9ddbe450.js";import"./naive-ui-e3a37dce.js";import"./date-fns-2c268c3c.js";import"./vueuc-e19c7b48.js";import"./evtd-b614532e.js";import"./seemly-4f9c12c5.js";import"./@css-render-490b4d85.js";import"./vooks-db1138e2.js";import"./vdirs-b0483831.js";import"./@juggle-41516555.js";import"./css-render-d3958e6a.js";import"./@emotion-8a8e73f6.js";import"./lodash-es-000674ce.js";import"./treemate-426a560e.js";import"./async-validator-dee29e8b.js";import"./vue-echarts-f350ff7c.js";import"./resize-detector-a5205554.js";import"./echarts-8b4ffd07.js";import"./zrender-d04178fe.js";import"./tslib-54e39b60.js";import"./vue-router-655d402f.js";import"./@iconify-688b7688.js";import"./axios-47b9d439.js";import"./pinia-plugin-persistedstate-02097300.js";const P=u({name:"Markdown"}),U=u({...P,props:{editorId:{default:"markRaw_MdEditor"},previewTheme:{default:"default"},codeTheme:{default:"atom"},readOnly:{type:Boolean},mStyle:{default:""},toolbarsExclude:{default:()=>["htmlPreview","codeRow","code","unorderedList","orderedList","quote"]},modelValue:{default:""},uploadImgMethod:{},methodParams:{}},emits:["update:modelValue","save","uploadImg"],setup(f,{emit:i}){const e=f,r=i,p=c({get(){return e.modelValue},set(o){r("update:modelValue",o)}}),d=M(),v=c(()=>d.isDark?"dark":"light"),I=c(()=>d.language==="en"?"en-US":"zh-CN"),V=(o,m)=>{r("save",o,m)},k=async(o,m)=>{const n=await Promise.all(o.map(s=>new Promise((T,b)=>{const h=new FormData;h.append("file",s);const l=e.methodParams;l&&Object.keys(l).map(t=>{l.hasOwn(t)&&h.append(t,l[t])});const g=e.uploadImgMethod;g&&g(l).then(t=>{T(t)}).catch(t=>{b(t)})})));m(n.map(s=>s.data.url)),r("uploadImg",n)};return(o,m)=>(_(),w(a(x),{modelValue:a(p),"onUpdate:modelValue":m[0]||(m[0]=n=>y(p)?p.value=n:null),editorId:e.editorId,theme:a(v),language:a(I),previewTheme:e.previewTheme,codeTheme:e.codeTheme,noImgZoomIn:!0,autofocus:!0,"read-only":o.readOnly,style:E(e.mStyle||{height:a(S)("main")}),toolbarsExclude:e.toolbarsExclude,onSave:V,onUploadImg:k},null,8,["modelValue","editorId","theme","language","previewTheme","codeTheme","read-only","style","toolbarsExclude"]))}}),z=u({name:"MarkdownDemo"}),Oe=u({...z,setup(f){const i=O("Markdown基于[MdEditorV3](https://imzbf.github.io/md-editor-v3/en-US/index)");return(e,r)=>{const p=U;return _(),w(p,{modelValue:a(i),"onUpdate:modelValue":r[0]||(r[0]=d=>y(i)?i.value=d:null)},null,8,["modelValue"])}}});export{Oe as default};
