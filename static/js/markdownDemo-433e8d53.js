import{h as e,i as a,o,j as d,l as t,Q as l,af as m,b4 as n,M as r}from"./.pnpm-6218793e.js";import{b as u,c as s}from"./index-fb27e1cc.js";const i=e({name:"Markdown"}),p=e({...i,props:{editorId:{default:"markRaw_MdEditor"},previewTheme:{default:"default"},codeTheme:{default:"atom"},readOnly:{type:Boolean},mStyle:{default:""},toolbarsExclude:{default:()=>["htmlPreview","codeRow","code","unorderedList","orderedList","quote"]},modelValue:{default:""},uploadImgMethod:{},methodParams:{}},emits:["update:modelValue","save","uploadImg"],setup(e,{emit:r}){const i=e,p=r,h=a({get:()=>i.modelValue,set(e){p("update:modelValue",e)}}),c=u(),g=a((()=>c.isDark?"dark":"light")),f=a((()=>"en"===c.language?"en-US":"zh-CN")),w=(e,a)=>{p("save",e,a)},v=async(e,a)=>{const o=await Promise.all(e.map((e=>new Promise(((a,o)=>{const d=new FormData;d.append("file",e);const t=i.methodParams;t&&Object.keys(t).map((e=>{t.hasOwn(e)&&d.append(e,t[e])}));const l=i.uploadImgMethod;l&&l(t).then((e=>{a(e)})).catch((e=>{o(e)}))})))));a(o.map((e=>e.data.url))),p("uploadImg",o)};return(e,a)=>(o(),d(t(n),{modelValue:t(h),"onUpdate:modelValue":a[0]||(a[0]=e=>l(h)?h.value=e:null),editorId:i.editorId,theme:t(g),language:t(f),previewTheme:i.previewTheme,codeTheme:i.codeTheme,noImgZoomIn:!0,autofocus:!0,"read-only":e.readOnly,style:m(i.mStyle||{height:t(s)("main")}),toolbarsExclude:i.toolbarsExclude,onSave:w,onUploadImg:v},null,8,["modelValue","editorId","theme","language","previewTheme","codeTheme","read-only","style","toolbarsExclude"]))}}),h=e({name:"MarkdownDemo"}),c=e({...h,setup(e){const a=r("Markdown基于[MdEditorV3](https://imzbf.github.io/md-editor-v3/en-US/index)");return(e,m)=>{const n=p;return o(),d(n,{modelValue:t(a),"onUpdate:modelValue":m[0]||(m[0]=e=>l(a)?a.value=e:null)},null,8,["modelValue"])}}});export{c as default};
