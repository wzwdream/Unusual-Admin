function m(t){return(a={})=>{const e=a.width?String(a.width):t.defaultWidth;return t.formats[e]||t.formats[t.defaultWidth]}}function d(t){return(a,e)=>{const n=e!=null&&e.context?String(e.context):"standalone";let r;if(n==="formatting"&&t.formattingValues){const i=t.defaultFormattingWidth||t.defaultWidth,o=e!=null&&e.width?String(e.width):i;r=t.formattingValues[o]||t.formattingValues[i]}else{const i=t.defaultWidth,o=e!=null&&e.width?String(e.width):t.defaultWidth;r=t.values[o]||t.values[i]}const s=t.argumentCallback?t.argumentCallback(a):a;return r[s]}}function u(t){return(a,e={})=>{const n=e.width,r=n&&t.matchPatterns[n]||t.matchPatterns[t.defaultMatchWidth],s=a.match(r);if(!s)return null;const i=s[0],o=n&&t.parsePatterns[n]||t.parsePatterns[t.defaultParseWidth],h=Array.isArray(o)?P(o,f=>f.test(i)):w(o,f=>f.test(i));let c;c=t.valueCallback?t.valueCallback(h):h,c=e.valueCallback?e.valueCallback(c):c;const l=a.slice(i.length);return{value:c,rest:l}}}function w(t,a){for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&a(t[e]))return e}function P(t,a){for(let e=0;e<t.length;e++)if(a(t[e]))return e}function g(t){return(a,e={})=>{const n=a.match(t.matchPattern);if(!n)return null;const r=n[0],s=a.match(t.parsePattern);if(!s)return null;let i=t.valueCallback?t.valueCallback(s[0]):s[0];i=e.valueCallback?e.valueCallback(i):i;const o=a.slice(r.length);return{value:i,rest:o}}}function v(t){const a=Object.prototype.toString.call(t);return t instanceof Date||typeof t=="object"&&a==="[object Date]"?new t.constructor(+t):typeof t=="number"||a==="[object Number]"||typeof t=="string"||a==="[object String]"?new Date(t):new Date(NaN)}let W={};function M(){return W}function y(t,a){var o,h,c,l;const e=M(),n=(a==null?void 0:a.weekStartsOn)??((h=(o=a==null?void 0:a.locale)==null?void 0:o.options)==null?void 0:h.weekStartsOn)??e.weekStartsOn??((l=(c=e.locale)==null?void 0:c.options)==null?void 0:l.weekStartsOn)??0,r=v(t),s=r.getDay(),i=(s<n?7:0)+s-n;return r.setDate(r.getDate()-i),r.setHours(0,0,0,0),r}function p(t,a,e){const n=y(t,e),r=y(a,e);return+n==+r}const k={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},S=(t,a,e)=>{let n;const r=k[t];return typeof r=="string"?n=r:a===1?n=r.one:n=r.other.replace("{{count}}",a.toString()),e!=null&&e.addSuffix?e.comparison&&e.comparison>0?"in "+n:n+" ago":n},D={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},$=(t,a,e,n)=>D[t],x={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},O={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},C={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},F={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},N={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},V={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},z=(t,a)=>{const e=Number(t),n=e%100;if(n>20||n<10)switch(n%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"},T={ordinalNumber:z,era:d({values:x,defaultWidth:"wide"}),quarter:d({values:O,defaultWidth:"wide",argumentCallback:t=>t-1}),month:d({values:C,defaultWidth:"wide"}),day:d({values:F,defaultWidth:"wide"}),dayPeriod:d({values:N,defaultWidth:"wide",formattingValues:V,defaultFormattingWidth:"wide"})},j=/^(\d+)(th|st|nd|rd)?/i,A=/\d+/i,X={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},q={any:[/^b/i,/^(a|c)/i]},E={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},L={any:[/1/i,/2/i,/3/i,/4/i]},R={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},J={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},Q={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},Y={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},H={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},_={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},B={ordinalNumber:g({matchPattern:j,parsePattern:A,valueCallback:t=>parseInt(t,10)}),era:u({matchPatterns:X,defaultMatchWidth:"wide",parsePatterns:q,defaultParseWidth:"any"}),quarter:u({matchPatterns:E,defaultMatchWidth:"wide",parsePatterns:L,defaultParseWidth:"any",valueCallback:t=>t+1}),month:u({matchPatterns:R,defaultMatchWidth:"wide",parsePatterns:J,defaultParseWidth:"any"}),day:u({matchPatterns:Q,defaultMatchWidth:"wide",parsePatterns:Y,defaultParseWidth:"any"}),dayPeriod:u({matchPatterns:H,defaultMatchWidth:"any",parsePatterns:_,defaultParseWidth:"any"})},I={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},U={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},K={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},G={date:m({formats:I,defaultWidth:"full"}),time:m({formats:U,defaultWidth:"full"}),dateTime:m({formats:K,defaultWidth:"full"})},xt={code:"en-US",formatDistance:S,formatLong:G,formatRelative:$,localize:T,match:B,options:{weekStartsOn:0,firstWeekContainsDate:1}},Z={lessThanXSeconds:{one:"不到 1 秒",other:"不到 {{count}} 秒"},xSeconds:{one:"1 秒",other:"{{count}} 秒"},halfAMinute:"半分钟",lessThanXMinutes:{one:"不到 1 分钟",other:"不到 {{count}} 分钟"},xMinutes:{one:"1 分钟",other:"{{count}} 分钟"},xHours:{one:"1 小时",other:"{{count}} 小时"},aboutXHours:{one:"大约 1 小时",other:"大约 {{count}} 小时"},xDays:{one:"1 天",other:"{{count}} 天"},aboutXWeeks:{one:"大约 1 个星期",other:"大约 {{count}} 个星期"},xWeeks:{one:"1 个星期",other:"{{count}} 个星期"},aboutXMonths:{one:"大约 1 个月",other:"大约 {{count}} 个月"},xMonths:{one:"1 个月",other:"{{count}} 个月"},aboutXYears:{one:"大约 1 年",other:"大约 {{count}} 年"},xYears:{one:"1 年",other:"{{count}} 年"},overXYears:{one:"超过 1 年",other:"超过 {{count}} 年"},almostXYears:{one:"将近 1 年",other:"将近 {{count}} 年"}},tt=(t,a,e)=>{let n;const r=Z[t];return typeof r=="string"?n=r:a===1?n=r.one:n=r.other.replace("{{count}}",String(a)),e!=null&&e.addSuffix?e.comparison&&e.comparison>0?n+"内":n+"前":n},et={full:"y'年'M'月'd'日' EEEE",long:"y'年'M'月'd'日'",medium:"yyyy-MM-dd",short:"yy-MM-dd"},at={full:"zzzz a h:mm:ss",long:"z a h:mm:ss",medium:"a h:mm:ss",short:"a h:mm"},nt={full:"{{date}} {{time}}",long:"{{date}} {{time}}",medium:"{{date}} {{time}}",short:"{{date}} {{time}}"},rt={date:m({formats:et,defaultWidth:"full"}),time:m({formats:at,defaultWidth:"full"}),dateTime:m({formats:nt,defaultWidth:"full"})};function b(t,a,e){const n="eeee p";return p(t,a,e)?n:t.getTime()>a.getTime()?"'下个'"+n:"'上个'"+n}const it={lastWeek:b,yesterday:"'昨天' p",today:"'今天' p",tomorrow:"'明天' p",nextWeek:b,other:"PP p"},ot=(t,a,e,n)=>{const r=it[t];return typeof r=="function"?r(a,e,n):r},st={narrow:["前","公元"],abbreviated:["前","公元"],wide:["公元前","公元"]},dt={narrow:["1","2","3","4"],abbreviated:["第一季","第二季","第三季","第四季"],wide:["第一季度","第二季度","第三季度","第四季度"]},ut={narrow:["一","二","三","四","五","六","七","八","九","十","十一","十二"],abbreviated:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],wide:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]},ct={narrow:["日","一","二","三","四","五","六"],short:["日","一","二","三","四","五","六"],abbreviated:["周日","周一","周二","周三","周四","周五","周六"],wide:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"]},mt={narrow:{am:"上",pm:"下",midnight:"凌晨",noon:"午",morning:"早",afternoon:"下午",evening:"晚",night:"夜"},abbreviated:{am:"上午",pm:"下午",midnight:"凌晨",noon:"中午",morning:"早晨",afternoon:"中午",evening:"晚上",night:"夜间"},wide:{am:"上午",pm:"下午",midnight:"凌晨",noon:"中午",morning:"早晨",afternoon:"中午",evening:"晚上",night:"夜间"}},ht={narrow:{am:"上",pm:"下",midnight:"凌晨",noon:"午",morning:"早",afternoon:"下午",evening:"晚",night:"夜"},abbreviated:{am:"上午",pm:"下午",midnight:"凌晨",noon:"中午",morning:"早晨",afternoon:"中午",evening:"晚上",night:"夜间"},wide:{am:"上午",pm:"下午",midnight:"凌晨",noon:"中午",morning:"早晨",afternoon:"中午",evening:"晚上",night:"夜间"}},lt=(t,a)=>{const e=Number(t);switch(a==null?void 0:a.unit){case"date":return e.toString()+"日";case"hour":return e.toString()+"时";case"minute":return e.toString()+"分";case"second":return e.toString()+"秒";default:return"第 "+e.toString()}},ft={ordinalNumber:lt,era:d({values:st,defaultWidth:"wide"}),quarter:d({values:dt,defaultWidth:"wide",argumentCallback:t=>t-1}),month:d({values:ut,defaultWidth:"wide"}),day:d({values:ct,defaultWidth:"wide"}),dayPeriod:d({values:mt,defaultWidth:"wide",formattingValues:ht,defaultFormattingWidth:"wide"})},yt=/^(第\s*)?\d+(日|时|分|秒)?/i,bt=/\d+/i,gt={narrow:/^(前)/i,abbreviated:/^(前)/i,wide:/^(公元前|公元)/i},wt={any:[/^(前)/i,/^(公元)/i]},Pt={narrow:/^[1234]/i,abbreviated:/^第[一二三四]刻/i,wide:/^第[一二三四]刻钟/i},vt={any:[/(1|一)/i,/(2|二)/i,/(3|三)/i,/(4|四)/i]},Wt={narrow:/^(一|二|三|四|五|六|七|八|九|十[二一])/i,abbreviated:/^(一|二|三|四|五|六|七|八|九|十[二一]|\d|1[12])月/i,wide:/^(一|二|三|四|五|六|七|八|九|十[二一])月/i},Mt={narrow:[/^一/i,/^二/i,/^三/i,/^四/i,/^五/i,/^六/i,/^七/i,/^八/i,/^九/i,/^十(?!(一|二))/i,/^十一/i,/^十二/i],any:[/^一|1/i,/^二|2/i,/^三|3/i,/^四|4/i,/^五|5/i,/^六|6/i,/^七|7/i,/^八|8/i,/^九|9/i,/^十(?!(一|二))|10/i,/^十一|11/i,/^十二|12/i]},pt={narrow:/^[一二三四五六日]/i,short:/^[一二三四五六日]/i,abbreviated:/^周[一二三四五六日]/i,wide:/^星期[一二三四五六日]/i},kt={any:[/日/i,/一/i,/二/i,/三/i,/四/i,/五/i,/六/i]},St={any:/^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨|)/i},Dt={any:{am:/^上午?/i,pm:/^下午?/i,midnight:/^午夜/i,noon:/^[中正]午/i,morning:/^早上/i,afternoon:/^下午/i,evening:/^晚上?/i,night:/^凌晨/i}},$t={ordinalNumber:g({matchPattern:yt,parsePattern:bt,valueCallback:t=>parseInt(t,10)}),era:u({matchPatterns:gt,defaultMatchWidth:"wide",parsePatterns:wt,defaultParseWidth:"any"}),quarter:u({matchPatterns:Pt,defaultMatchWidth:"wide",parsePatterns:vt,defaultParseWidth:"any",valueCallback:t=>t+1}),month:u({matchPatterns:Wt,defaultMatchWidth:"wide",parsePatterns:Mt,defaultParseWidth:"any"}),day:u({matchPatterns:pt,defaultMatchWidth:"wide",parsePatterns:kt,defaultParseWidth:"any"}),dayPeriod:u({matchPatterns:St,defaultMatchWidth:"any",parsePatterns:Dt,defaultParseWidth:"any"})},Ot={code:"zh-CN",formatDistance:tt,formatLong:rt,formatRelative:ot,localize:ft,match:$t,options:{weekStartsOn:1,firstWeekContainsDate:4}};export{xt as e,Ot as z};
