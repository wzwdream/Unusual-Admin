import{E as b}from"./md-editor-v3-CNBwYFAc.js";import{b as x,c as E}from"./index-BukTgyxp.js";import{d as u,j as c,ae as _,m as w,u as a,S as M,f as v,a as P}from"./@vue-hDPt79YI.js";import"./@vavt-DP7Y4tOx.js";import"./@codemirror-BcTyK8Ct.js";import"./@lezer-Bq4_8UpH.js";import"./crelt-C8TCjufn.js";import"./@marijn-DXwl3gUT.js";import"./style-mod-Bc2inJdb.js";import"./w3c-keyname-Vcq4gwWv.js";import"./medium-zoom-bWEtUbjf.js";import"./copy-to-clipboard-CoXQxBGa.js";import"./toggle-selection-BHUZwh74.js";import"./markdown-it-C44Roubk.js";import"./mdurl-k9Sl0PQj.js";import"./uc.micro-kMc2yuuw.js";import"./entities-C20TfXL6.js";import"./linkify-it-DmNjr4Kv.js";import"./punycode.js-Dj65hjkv.js";import"./markdown-it-image-figures-IpqUZCLv.js";import"./markdown-it-sub-Bxi31R0z.js";import"./markdown-it-sup-Bp2DoVCN.js";import"./lru-cache-DmfXgoGS.js";import"./@vueuse-BiuUNhkd.js";import"./pinia-BjKXS5ic.js";import"./vue-i18n-Dk-SIn3V.js";import"./@intlify-ZcBRI--x.js";import"./naive-ui-B0x1dlqI.js";import"./date-fns-pQOEqued.js";import"./vueuc-Cy6NzoKr.js";import"./evtd-CI_DDEu_.js";import"./seemly-DXTCRGqE.js";import"./@css-render-Ed7HajDt.js";import"./vooks-COlTATDB.js";import"./vdirs-DRH9Xvnd.js";import"./@juggle-C8OzoCMD.js";import"./css-render-BDrvWz3H.js";import"./@emotion-WldOFDRm.js";import"./lodash-es-DkZVwyoF.js";import"./treemate-DKekKYbv.js";import"./async-validator-9PlIezaS.js";import"./vue-echarts-DSlFlwne.js";import"./resize-detector-G6vbKCU7.js";import"./echarts-CuRpVpP4.js";import"./zrender-DGX4euIw.js";import"./tslib-BDyQ-Jie.js";import"./vue-router-DqVd_W5F.js";import"./@iconify-BjyHS9ah.js";import"./axios-BQJyKPGC.js";import"./pinia-plugin-persistedstate-RV7uh3T-.js";import"./vite-plugin-mock-m67_kHJ6.js";import"./mockjs-DcYjckXe.js";import"./path-to-regexp-CkFk_Ecl.js";const U=u({name:"Markdown"}),O=u({...U,props:{editorId:{default:"markRaw_MdEditor"},previewTheme:{default:"default"},codeTheme:{default:"atom"},readOnly:{type:Boolean},mStyle:{default:""},toolbarsExclude:{default:()=>["htmlPreview","codeRow","code","unorderedList","orderedList","quote"]},modelValue:{default:""},uploadImgMethod:{},methodParams:{}},emits:["update:modelValue","save","uploadImg"],setup(f,{emit:i}){const e=f,r=i,p=c({get(){return e.modelValue},set(o){r("update:modelValue",o)}}),l=x(),y=c(()=>l.isDark?"dark":"light"),I=c(()=>l.language==="en"?"en-US":"zh-CN"),V=(o,m)=>{r("save",o,m)},k=async(o,m)=>{const n=await Promise.all(o.map(s=>new Promise((S,T)=>{const h=new FormData;h.append("file",s);const d=e.methodParams;d&&Object.keys(d).map(t=>{d.hasOwn(t)&&h.append(t,d[t])});const g=e.uploadImgMethod;g&&g(d).then(t=>{S(t)}).catch(t=>{T(t)})})));m(n.map(s=>s.data.url)),r("uploadImg",n)};return(o,m)=>(w(),_(a(b),{modelValue:a(p),"onUpdate:modelValue":m[0]||(m[0]=n=>v(p)?p.value=n:null),editorId:e.editorId,theme:a(y),language:a(I),previewTheme:e.previewTheme,codeTheme:e.codeTheme,noImgZoomIn:!0,autofocus:!0,"read-only":o.readOnly,style:M(e.mStyle||{height:a(E)("main")}),toolbarsExclude:e.toolbarsExclude,onSave:V,onUploadImg:k},null,8,["modelValue","editorId","theme","language","previewTheme","codeTheme","read-only","style","toolbarsExclude"]))}}),z=u({name:"MarkdownDemo"}),ze=u({...z,setup(f){const i=P("Markdown基于[MdEditorV3](https://imzbf.github.io/md-editor-v3/en-US/index)");return(e,r)=>{const p=O;return w(),_(p,{modelValue:a(i),"onUpdate:modelValue":r[0]||(r[0]=l=>v(i)?i.value=l:null)},null,8,["modelValue"])}}});export{ze as default};
