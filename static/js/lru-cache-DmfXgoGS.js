var Pt=Object.defineProperty;var Wt=c=>{throw TypeError(c)};var Ht=(c,e,i)=>e in c?Pt(c,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):c[e]=i;var b=(c,e,i)=>Ht(c,typeof e!="symbol"?e+"":e,i),At=(c,e,i)=>e.has(c)||Wt("Cannot "+i);var t=(c,e,i)=>(At(c,e,"read from private field"),i?i.call(c):e.get(c)),p=(c,e,i)=>e.has(c)?Wt("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(c):e.set(c,i),f=(c,e,i,s)=>(At(c,e,"write to private field"),s?s.call(c,i):e.set(c,i),i),l=(c,e,i)=>(At(c,e,"access private method"),i);var wt=(c,e,i,s)=>({set _(h){f(c,e,h,i)},get _(){return t(c,e,s)}});const rt=typeof performance=="object"&&performance&&typeof performance.now=="function"?performance:Date,Gt=new Set,Ft=typeof process=="object"&&process?process:{},It=(c,e,i,s)=>{typeof Ft.emitWarning=="function"?Ft.emitWarning(c,e,i,s):console.error(`[${i}] ${e}: ${c}`)};let bt=globalThis.AbortController,Dt=globalThis.AbortSignal;var xt;if(typeof bt>"u"){Dt=class{constructor(){b(this,"onabort");b(this,"_onabort",[]);b(this,"reason");b(this,"aborted",!1)}addEventListener(s,h){this._onabort.push(h)}},bt=class{constructor(){b(this,"signal",new Dt);e()}abort(s){var h,n;if(!this.signal.aborted){this.signal.reason=s,this.signal.aborted=!0;for(const r of this.signal._onabort)r(s);(n=(h=this.signal).onabort)==null||n.call(h,s)}}};let c=((xt=Ft.env)==null?void 0:xt.LRU_CACHE_IGNORE_AC_WARNING)!=="1";const e=()=>{c&&(c=!1,It("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.","NO_ABORT_CONTROLLER","ENOTSUP",e))}}const kt=c=>!Gt.has(c),K=c=>c&&c===Math.floor(c)&&c>0&&isFinite(c),jt=c=>K(c)?c<=Math.pow(2,8)?Uint8Array:c<=Math.pow(2,16)?Uint16Array:c<=Math.pow(2,32)?Uint32Array:c<=Number.MAX_SAFE_INTEGER?St:null:null;class St extends Array{constructor(e){super(e),this.fill(0)}}var ot;const st=class st{constructor(e,i){b(this,"heap");b(this,"length");if(!t(st,ot))throw new TypeError("instantiate Stack using Stack.create(n)");this.heap=new i(e),this.length=0}static create(e){const i=jt(e);if(!i)return[];f(st,ot,!0);const s=new st(e,i);return f(st,ot,!1),s}push(e){this.heap[this.length++]=e}pop(){return this.heap[--this.length]}};ot=new WeakMap,p(st,ot,!1);let Tt=st;var Ut,Mt,N,L,P,H,lt,at,T,k,F,m,g,R,x,C,O,V,E,B,$,U,q,it,W,o,Ot,nt,Y,dt,M,Nt,ht,ft,gt,Q,tt,Et,_t,mt,_,zt,ut,et,vt;const Ct=class Ct{constructor(e){p(this,o);p(this,N);p(this,L);p(this,P);p(this,H);p(this,lt);p(this,at);b(this,"ttl");b(this,"ttlResolution");b(this,"ttlAutopurge");b(this,"updateAgeOnGet");b(this,"updateAgeOnHas");b(this,"allowStale");b(this,"noDisposeOnSet");b(this,"noUpdateTTL");b(this,"maxEntrySize");b(this,"sizeCalculation");b(this,"noDeleteOnFetchRejection");b(this,"noDeleteOnStaleGet");b(this,"allowStaleOnFetchAbort");b(this,"allowStaleOnFetchRejection");b(this,"ignoreFetchAbort");p(this,T);p(this,k);p(this,F);p(this,m);p(this,g);p(this,R);p(this,x);p(this,C);p(this,O);p(this,V);p(this,E);p(this,B);p(this,$);p(this,U);p(this,q);p(this,it);p(this,W);p(this,nt,()=>{});p(this,Y,()=>{});p(this,dt,()=>{});p(this,M,()=>!1);p(this,ht,e=>{});p(this,ft,(e,i,s)=>{});p(this,gt,(e,i,s,h)=>{if(s||h)throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");return 0});b(this,Ut,"LRUCache");const{max:i=0,ttl:s,ttlResolution:h=1,ttlAutopurge:n,updateAgeOnGet:r,updateAgeOnHas:d,allowStale:a,dispose:w,disposeAfter:G,noDisposeOnSet:S,noUpdateTTL:Z,maxSize:I=0,maxEntrySize:X=0,sizeCalculation:A,fetchMethod:v,memoMethod:u,noDeleteOnFetchRejection:y,noDeleteOnStaleGet:D,allowStaleOnFetchRejection:z,allowStaleOnFetchAbort:j,ignoreFetchAbort:ct}=e;if(i!==0&&!K(i))throw new TypeError("max option must be a nonnegative integer");const J=i?jt(i):Array;if(!J)throw new Error("invalid max value: "+i);if(f(this,N,i),f(this,L,I),this.maxEntrySize=X||t(this,L),this.sizeCalculation=A,this.sizeCalculation){if(!t(this,L)&&!this.maxEntrySize)throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");if(typeof this.sizeCalculation!="function")throw new TypeError("sizeCalculation set to non-function")}if(u!==void 0&&typeof u!="function")throw new TypeError("memoMethod must be a function if defined");if(f(this,at,u),v!==void 0&&typeof v!="function")throw new TypeError("fetchMethod must be a function if specified");if(f(this,lt,v),f(this,it,!!v),f(this,F,new Map),f(this,m,new Array(i).fill(void 0)),f(this,g,new Array(i).fill(void 0)),f(this,R,new J(i)),f(this,x,new J(i)),f(this,C,0),f(this,O,0),f(this,V,Tt.create(i)),f(this,T,0),f(this,k,0),typeof w=="function"&&f(this,P,w),typeof G=="function"?(f(this,H,G),f(this,E,[])):(f(this,H,void 0),f(this,E,void 0)),f(this,q,!!t(this,P)),f(this,W,!!t(this,H)),this.noDisposeOnSet=!!S,this.noUpdateTTL=!!Z,this.noDeleteOnFetchRejection=!!y,this.allowStaleOnFetchRejection=!!z,this.allowStaleOnFetchAbort=!!j,this.ignoreFetchAbort=!!ct,this.maxEntrySize!==0){if(t(this,L)!==0&&!K(t(this,L)))throw new TypeError("maxSize must be a positive integer if specified");if(!K(this.maxEntrySize))throw new TypeError("maxEntrySize must be a positive integer if specified");l(this,o,Nt).call(this)}if(this.allowStale=!!a,this.noDeleteOnStaleGet=!!D,this.updateAgeOnGet=!!r,this.updateAgeOnHas=!!d,this.ttlResolution=K(h)||h===0?h:1,this.ttlAutopurge=!!n,this.ttl=s||0,this.ttl){if(!K(this.ttl))throw new TypeError("ttl must be a positive integer if specified");l(this,o,Ot).call(this)}if(t(this,N)===0&&this.ttl===0&&t(this,L)===0)throw new TypeError("At least one of max, maxSize, or ttl is required");if(!this.ttlAutopurge&&!t(this,N)&&!t(this,L)){const pt="LRU_CACHE_UNBOUNDED";kt(pt)&&(Gt.add(pt),It("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.","UnboundedCacheWarning",pt,Ct))}}static unsafeExposeInternals(e){return{starts:t(e,$),ttls:t(e,U),sizes:t(e,B),keyMap:t(e,F),keyList:t(e,m),valList:t(e,g),next:t(e,R),prev:t(e,x),get head(){return t(e,C)},get tail(){return t(e,O)},free:t(e,V),isBackgroundFetch:i=>{var s;return l(s=e,o,_).call(s,i)},backgroundFetch:(i,s,h,n)=>{var r;return l(r=e,o,mt).call(r,i,s,h,n)},moveToTail:i=>{var s;return l(s=e,o,ut).call(s,i)},indexes:i=>{var s;return l(s=e,o,Q).call(s,i)},rindexes:i=>{var s;return l(s=e,o,tt).call(s,i)},isStale:i=>{var s;return t(s=e,M).call(s,i)}}}get max(){return t(this,N)}get maxSize(){return t(this,L)}get calculatedSize(){return t(this,k)}get size(){return t(this,T)}get fetchMethod(){return t(this,lt)}get memoMethod(){return t(this,at)}get dispose(){return t(this,P)}get disposeAfter(){return t(this,H)}getRemainingTTL(e){return t(this,F).has(e)?1/0:0}*entries(){for(const e of l(this,o,Q).call(this))t(this,g)[e]!==void 0&&t(this,m)[e]!==void 0&&!l(this,o,_).call(this,t(this,g)[e])&&(yield[t(this,m)[e],t(this,g)[e]])}*rentries(){for(const e of l(this,o,tt).call(this))t(this,g)[e]!==void 0&&t(this,m)[e]!==void 0&&!l(this,o,_).call(this,t(this,g)[e])&&(yield[t(this,m)[e],t(this,g)[e]])}*keys(){for(const e of l(this,o,Q).call(this)){const i=t(this,m)[e];i!==void 0&&!l(this,o,_).call(this,t(this,g)[e])&&(yield i)}}*rkeys(){for(const e of l(this,o,tt).call(this)){const i=t(this,m)[e];i!==void 0&&!l(this,o,_).call(this,t(this,g)[e])&&(yield i)}}*values(){for(const e of l(this,o,Q).call(this))t(this,g)[e]!==void 0&&!l(this,o,_).call(this,t(this,g)[e])&&(yield t(this,g)[e])}*rvalues(){for(const e of l(this,o,tt).call(this))t(this,g)[e]!==void 0&&!l(this,o,_).call(this,t(this,g)[e])&&(yield t(this,g)[e])}[(Mt=Symbol.iterator,Ut=Symbol.toStringTag,Mt)](){return this.entries()}find(e,i={}){for(const s of l(this,o,Q).call(this)){const h=t(this,g)[s],n=l(this,o,_).call(this,h)?h.__staleWhileFetching:h;if(n!==void 0&&e(n,t(this,m)[s],this))return this.get(t(this,m)[s],i)}}forEach(e,i=this){for(const s of l(this,o,Q).call(this)){const h=t(this,g)[s],n=l(this,o,_).call(this,h)?h.__staleWhileFetching:h;n!==void 0&&e.call(i,n,t(this,m)[s],this)}}rforEach(e,i=this){for(const s of l(this,o,tt).call(this)){const h=t(this,g)[s],n=l(this,o,_).call(this,h)?h.__staleWhileFetching:h;n!==void 0&&e.call(i,n,t(this,m)[s],this)}}purgeStale(){let e=!1;for(const i of l(this,o,tt).call(this,{allowStale:!0}))t(this,M).call(this,i)&&(l(this,o,et).call(this,t(this,m)[i],"expire"),e=!0);return e}info(e){const i=t(this,F).get(e);if(i===void 0)return;const s=t(this,g)[i],h=l(this,o,_).call(this,s)?s.__staleWhileFetching:s;if(h===void 0)return;const n={value:h};if(t(this,U)&&t(this,$)){const r=t(this,U)[i],d=t(this,$)[i];if(r&&d){const a=r-(rt.now()-d);n.ttl=a,n.start=Date.now()}}return t(this,B)&&(n.size=t(this,B)[i]),n}dump(){const e=[];for(const i of l(this,o,Q).call(this,{allowStale:!0})){const s=t(this,m)[i],h=t(this,g)[i],n=l(this,o,_).call(this,h)?h.__staleWhileFetching:h;if(n===void 0||s===void 0)continue;const r={value:n};if(t(this,U)&&t(this,$)){r.ttl=t(this,U)[i];const d=rt.now()-t(this,$)[i];r.start=Math.floor(Date.now()-d)}t(this,B)&&(r.size=t(this,B)[i]),e.unshift([s,r])}return e}load(e){this.clear();for(const[i,s]of e){if(s.start){const h=Date.now()-s.start;s.start=rt.now()-h}this.set(i,s.value,s)}}set(e,i,s={}){var Z,I,X,A,v;if(i===void 0)return this.delete(e),this;const{ttl:h=this.ttl,start:n,noDisposeOnSet:r=this.noDisposeOnSet,sizeCalculation:d=this.sizeCalculation,status:a}=s;let{noUpdateTTL:w=this.noUpdateTTL}=s;const G=t(this,gt).call(this,e,i,s.size||0,d);if(this.maxEntrySize&&G>this.maxEntrySize)return a&&(a.set="miss",a.maxEntrySizeExceeded=!0),l(this,o,et).call(this,e,"set"),this;let S=t(this,T)===0?void 0:t(this,F).get(e);if(S===void 0)S=t(this,T)===0?t(this,O):t(this,V).length!==0?t(this,V).pop():t(this,T)===t(this,N)?l(this,o,_t).call(this,!1):t(this,T),t(this,m)[S]=e,t(this,g)[S]=i,t(this,F).set(e,S),t(this,R)[t(this,O)]=S,t(this,x)[S]=t(this,O),f(this,O,S),wt(this,T)._++,t(this,ft).call(this,S,G,a),a&&(a.set="add"),w=!1;else{l(this,o,ut).call(this,S);const u=t(this,g)[S];if(i!==u){if(t(this,it)&&l(this,o,_).call(this,u)){u.__abortController.abort(new Error("replaced"));const{__staleWhileFetching:y}=u;y!==void 0&&!r&&(t(this,q)&&((Z=t(this,P))==null||Z.call(this,y,e,"set")),t(this,W)&&((I=t(this,E))==null||I.push([y,e,"set"])))}else r||(t(this,q)&&((X=t(this,P))==null||X.call(this,u,e,"set")),t(this,W)&&((A=t(this,E))==null||A.push([u,e,"set"])));if(t(this,ht).call(this,S),t(this,ft).call(this,S,G,a),t(this,g)[S]=i,a){a.set="replace";const y=u&&l(this,o,_).call(this,u)?u.__staleWhileFetching:u;y!==void 0&&(a.oldValue=y)}}else a&&(a.set="update")}if(h!==0&&!t(this,U)&&l(this,o,Ot).call(this),t(this,U)&&(w||t(this,dt).call(this,S,h,n),a&&t(this,Y).call(this,a,S)),!r&&t(this,W)&&t(this,E)){const u=t(this,E);let y;for(;y=u==null?void 0:u.shift();)(v=t(this,H))==null||v.call(this,...y)}return this}pop(){var e;try{for(;t(this,T);){const i=t(this,g)[t(this,C)];if(l(this,o,_t).call(this,!0),l(this,o,_).call(this,i)){if(i.__staleWhileFetching)return i.__staleWhileFetching}else if(i!==void 0)return i}}finally{if(t(this,W)&&t(this,E)){const i=t(this,E);let s;for(;s=i==null?void 0:i.shift();)(e=t(this,H))==null||e.call(this,...s)}}}has(e,i={}){const{updateAgeOnHas:s=this.updateAgeOnHas,status:h}=i,n=t(this,F).get(e);if(n!==void 0){const r=t(this,g)[n];if(l(this,o,_).call(this,r)&&r.__staleWhileFetching===void 0)return!1;if(t(this,M).call(this,n))h&&(h.has="stale",t(this,Y).call(this,h,n));else return s&&t(this,nt).call(this,n),h&&(h.has="hit",t(this,Y).call(this,h,n)),!0}else h&&(h.has="miss");return!1}peek(e,i={}){const{allowStale:s=this.allowStale}=i,h=t(this,F).get(e);if(h===void 0||!s&&t(this,M).call(this,h))return;const n=t(this,g)[h];return l(this,o,_).call(this,n)?n.__staleWhileFetching:n}async fetch(e,i={}){const{allowStale:s=this.allowStale,updateAgeOnGet:h=this.updateAgeOnGet,noDeleteOnStaleGet:n=this.noDeleteOnStaleGet,ttl:r=this.ttl,noDisposeOnSet:d=this.noDisposeOnSet,size:a=0,sizeCalculation:w=this.sizeCalculation,noUpdateTTL:G=this.noUpdateTTL,noDeleteOnFetchRejection:S=this.noDeleteOnFetchRejection,allowStaleOnFetchRejection:Z=this.allowStaleOnFetchRejection,ignoreFetchAbort:I=this.ignoreFetchAbort,allowStaleOnFetchAbort:X=this.allowStaleOnFetchAbort,context:A,forceRefresh:v=!1,status:u,signal:y}=i;if(!t(this,it))return u&&(u.fetch="get"),this.get(e,{allowStale:s,updateAgeOnGet:h,noDeleteOnStaleGet:n,status:u});const D={allowStale:s,updateAgeOnGet:h,noDeleteOnStaleGet:n,ttl:r,noDisposeOnSet:d,size:a,sizeCalculation:w,noUpdateTTL:G,noDeleteOnFetchRejection:S,allowStaleOnFetchRejection:Z,allowStaleOnFetchAbort:X,ignoreFetchAbort:I,status:u,signal:y};let z=t(this,F).get(e);if(z===void 0){u&&(u.fetch="miss");const j=l(this,o,mt).call(this,e,z,D,A);return j.__returned=j}else{const j=t(this,g)[z];if(l(this,o,_).call(this,j)){const Rt=s&&j.__staleWhileFetching!==void 0;return u&&(u.fetch="inflight",Rt&&(u.returnedStale=!0)),Rt?j.__staleWhileFetching:j.__returned=j}const ct=t(this,M).call(this,z);if(!v&&!ct)return u&&(u.fetch="hit"),l(this,o,ut).call(this,z),h&&t(this,nt).call(this,z),u&&t(this,Y).call(this,u,z),j;const J=l(this,o,mt).call(this,e,z,D,A),yt=J.__staleWhileFetching!==void 0&&s;return u&&(u.fetch=ct?"stale":"refresh",yt&&ct&&(u.returnedStale=!0)),yt?J.__staleWhileFetching:J.__returned=J}}async forceFetch(e,i={}){const s=await this.fetch(e,i);if(s===void 0)throw new Error("fetch() returned undefined");return s}memo(e,i={}){const s=t(this,at);if(!s)throw new Error("no memoMethod provided to constructor");const{context:h,forceRefresh:n,...r}=i,d=this.get(e,r);if(!n&&d!==void 0)return d;const a=s(e,d,{options:r,context:h});return this.set(e,a,r),a}get(e,i={}){const{allowStale:s=this.allowStale,updateAgeOnGet:h=this.updateAgeOnGet,noDeleteOnStaleGet:n=this.noDeleteOnStaleGet,status:r}=i,d=t(this,F).get(e);if(d!==void 0){const a=t(this,g)[d],w=l(this,o,_).call(this,a);return r&&t(this,Y).call(this,r,d),t(this,M).call(this,d)?(r&&(r.get="stale"),w?(r&&s&&a.__staleWhileFetching!==void 0&&(r.returnedStale=!0),s?a.__staleWhileFetching:void 0):(n||l(this,o,et).call(this,e,"expire"),r&&s&&(r.returnedStale=!0),s?a:void 0)):(r&&(r.get="hit"),w?a.__staleWhileFetching:(l(this,o,ut).call(this,d),h&&t(this,nt).call(this,d),a))}else r&&(r.get="miss")}delete(e){return l(this,o,et).call(this,e,"delete")}clear(){return l(this,o,vt).call(this,"delete")}};N=new WeakMap,L=new WeakMap,P=new WeakMap,H=new WeakMap,lt=new WeakMap,at=new WeakMap,T=new WeakMap,k=new WeakMap,F=new WeakMap,m=new WeakMap,g=new WeakMap,R=new WeakMap,x=new WeakMap,C=new WeakMap,O=new WeakMap,V=new WeakMap,E=new WeakMap,B=new WeakMap,$=new WeakMap,U=new WeakMap,q=new WeakMap,it=new WeakMap,W=new WeakMap,o=new WeakSet,Ot=function(){const e=new St(t(this,N)),i=new St(t(this,N));f(this,U,e),f(this,$,i),f(this,dt,(n,r,d=rt.now())=>{if(i[n]=r!==0?d:0,e[n]=r,r!==0&&this.ttlAutopurge){const a=setTimeout(()=>{t(this,M).call(this,n)&&l(this,o,et).call(this,t(this,m)[n],"expire")},r+1);a.unref&&a.unref()}}),f(this,nt,n=>{i[n]=e[n]!==0?rt.now():0}),f(this,Y,(n,r)=>{if(e[r]){const d=e[r],a=i[r];if(!d||!a)return;n.ttl=d,n.start=a,n.now=s||h();const w=n.now-a;n.remainingTTL=d-w}});let s=0;const h=()=>{const n=rt.now();if(this.ttlResolution>0){s=n;const r=setTimeout(()=>s=0,this.ttlResolution);r.unref&&r.unref()}return n};this.getRemainingTTL=n=>{const r=t(this,F).get(n);if(r===void 0)return 0;const d=e[r],a=i[r];if(!d||!a)return 1/0;const w=(s||h())-a;return d-w},f(this,M,n=>{const r=i[n],d=e[n];return!!d&&!!r&&(s||h())-r>d})},nt=new WeakMap,Y=new WeakMap,dt=new WeakMap,M=new WeakMap,Nt=function(){const e=new St(t(this,N));f(this,k,0),f(this,B,e),f(this,ht,i=>{f(this,k,t(this,k)-e[i]),e[i]=0}),f(this,gt,(i,s,h,n)=>{if(l(this,o,_).call(this,s))return 0;if(!K(h))if(n){if(typeof n!="function")throw new TypeError("sizeCalculation must be a function");if(h=n(s,i),!K(h))throw new TypeError("sizeCalculation return invalid (expect positive integer)")}else throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");return h}),f(this,ft,(i,s,h)=>{if(e[i]=s,t(this,L)){const n=t(this,L)-e[i];for(;t(this,k)>n;)l(this,o,_t).call(this,!0)}f(this,k,t(this,k)+e[i]),h&&(h.entrySize=s,h.totalCalculatedSize=t(this,k))})},ht=new WeakMap,ft=new WeakMap,gt=new WeakMap,Q=function*({allowStale:e=this.allowStale}={}){if(t(this,T))for(let i=t(this,O);!(!l(this,o,Et).call(this,i)||((e||!t(this,M).call(this,i))&&(yield i),i===t(this,C)));)i=t(this,x)[i]},tt=function*({allowStale:e=this.allowStale}={}){if(t(this,T))for(let i=t(this,C);!(!l(this,o,Et).call(this,i)||((e||!t(this,M).call(this,i))&&(yield i),i===t(this,O)));)i=t(this,R)[i]},Et=function(e){return e!==void 0&&t(this,F).get(t(this,m)[e])===e},_t=function(e){var n,r;const i=t(this,C),s=t(this,m)[i],h=t(this,g)[i];return t(this,it)&&l(this,o,_).call(this,h)?h.__abortController.abort(new Error("evicted")):(t(this,q)||t(this,W))&&(t(this,q)&&((n=t(this,P))==null||n.call(this,h,s,"evict")),t(this,W)&&((r=t(this,E))==null||r.push([h,s,"evict"]))),t(this,ht).call(this,i),e&&(t(this,m)[i]=void 0,t(this,g)[i]=void 0,t(this,V).push(i)),t(this,T)===1?(f(this,C,f(this,O,0)),t(this,V).length=0):f(this,C,t(this,R)[i]),t(this,F).delete(s),wt(this,T)._--,i},mt=function(e,i,s,h){const n=i===void 0?void 0:t(this,g)[i];if(l(this,o,_).call(this,n))return n;const r=new bt,{signal:d}=s;d==null||d.addEventListener("abort",()=>r.abort(d.reason),{signal:r.signal});const a={signal:r.signal,options:s,context:h},w=(A,v=!1)=>{const{aborted:u}=r.signal,y=s.ignoreFetchAbort&&A!==void 0;if(s.status&&(u&&!v?(s.status.fetchAborted=!0,s.status.fetchError=r.signal.reason,y&&(s.status.fetchAbortIgnored=!0)):s.status.fetchResolved=!0),u&&!y&&!v)return S(r.signal.reason);const D=I;return t(this,g)[i]===I&&(A===void 0?D.__staleWhileFetching?t(this,g)[i]=D.__staleWhileFetching:l(this,o,et).call(this,e,"fetch"):(s.status&&(s.status.fetchUpdated=!0),this.set(e,A,a.options))),A},G=A=>(s.status&&(s.status.fetchRejected=!0,s.status.fetchError=A),S(A)),S=A=>{const{aborted:v}=r.signal,u=v&&s.allowStaleOnFetchAbort,y=u||s.allowStaleOnFetchRejection,D=y||s.noDeleteOnFetchRejection,z=I;if(t(this,g)[i]===I&&(!D||z.__staleWhileFetching===void 0?l(this,o,et).call(this,e,"fetch"):u||(t(this,g)[i]=z.__staleWhileFetching)),y)return s.status&&z.__staleWhileFetching!==void 0&&(s.status.returnedStale=!0),z.__staleWhileFetching;if(z.__returned===z)throw A},Z=(A,v)=>{var y;const u=(y=t(this,lt))==null?void 0:y.call(this,e,n,a);u&&u instanceof Promise&&u.then(D=>A(D===void 0?void 0:D),v),r.signal.addEventListener("abort",()=>{(!s.ignoreFetchAbort||s.allowStaleOnFetchAbort)&&(A(void 0),s.allowStaleOnFetchAbort&&(A=D=>w(D,!0)))})};s.status&&(s.status.fetchDispatched=!0);const I=new Promise(Z).then(w,G),X=Object.assign(I,{__abortController:r,__staleWhileFetching:n,__returned:void 0});return i===void 0?(this.set(e,X,{...a.options,status:void 0}),i=t(this,F).get(e)):t(this,g)[i]=X,X},_=function(e){if(!t(this,it))return!1;const i=e;return!!i&&i instanceof Promise&&i.hasOwnProperty("__staleWhileFetching")&&i.__abortController instanceof bt},zt=function(e,i){t(this,x)[i]=e,t(this,R)[e]=i},ut=function(e){e!==t(this,O)&&(e===t(this,C)?f(this,C,t(this,R)[e]):l(this,o,zt).call(this,t(this,x)[e],t(this,R)[e]),l(this,o,zt).call(this,t(this,O),e),f(this,O,e))},et=function(e,i){var h,n,r,d;let s=!1;if(t(this,T)!==0){const a=t(this,F).get(e);if(a!==void 0)if(s=!0,t(this,T)===1)l(this,o,vt).call(this,i);else{t(this,ht).call(this,a);const w=t(this,g)[a];if(l(this,o,_).call(this,w)?w.__abortController.abort(new Error("deleted")):(t(this,q)||t(this,W))&&(t(this,q)&&((h=t(this,P))==null||h.call(this,w,e,i)),t(this,W)&&((n=t(this,E))==null||n.push([w,e,i]))),t(this,F).delete(e),t(this,m)[a]=void 0,t(this,g)[a]=void 0,a===t(this,O))f(this,O,t(this,x)[a]);else if(a===t(this,C))f(this,C,t(this,R)[a]);else{const G=t(this,x)[a];t(this,R)[G]=t(this,R)[a];const S=t(this,R)[a];t(this,x)[S]=t(this,x)[a]}wt(this,T)._--,t(this,V).push(a)}}if(t(this,W)&&((r=t(this,E))!=null&&r.length)){const a=t(this,E);let w;for(;w=a==null?void 0:a.shift();)(d=t(this,H))==null||d.call(this,...w)}return s},vt=function(e){var i,s,h;for(const n of l(this,o,tt).call(this,{allowStale:!0})){const r=t(this,g)[n];if(l(this,o,_).call(this,r))r.__abortController.abort(new Error("deleted"));else{const d=t(this,m)[n];t(this,q)&&((i=t(this,P))==null||i.call(this,r,d,e)),t(this,W)&&((s=t(this,E))==null||s.push([r,d,e]))}}if(t(this,F).clear(),t(this,g).fill(void 0),t(this,m).fill(void 0),t(this,U)&&t(this,$)&&(t(this,U).fill(0),t(this,$).fill(0)),t(this,B)&&t(this,B).fill(0),f(this,C,0),f(this,O,0),t(this,V).length=0,f(this,k,0),f(this,T,0),t(this,W)&&t(this,E)){const n=t(this,E);let r;for(;r=n==null?void 0:n.shift();)(h=t(this,H))==null||h.call(this,...r)}};let Lt=Ct;export{Lt as L};
