import{E as e}from"./md-editor-v3-CXhCtSC1.js";import{b as o,c as t}from"./index-BYCMBCbo.js";import{d as r,j as s,l as m,ad as i,u as a,f as d,P as l,a as p}from"./@vue-7s647Hg9.js";import"./@vavt-CMRoxN9M.js";import"./@codemirror-BDMijoIR.js";import"./@lezer-B1NhjyO5.js";import"./crelt-DSg10-ms.js";import"./style-mod-BCKp0_dq.js";import"./w3c-keyname-f-y9tSbI.js";import"./medium-zoom-CYdBhaDp.js";import"./copy-to-clipboard-lg0rY0OP.js";import"./@babel-DJq229zv.js";import"./toggle-selection-BNe8VzEU.js";import"./markdown-it-D-rRJ5Ge.js";import"./mdurl-DbZ9s47_.js";import"./uc.micro-CRGj88R_.js";import"./entities-D_unbCD7.js";import"./linkify-it-BRh3a1Qu.js";import"./punycode.js-H98b6B6Y.js";import"./markdown-it-image-figures-DRVLg4Fi.js";import"./markdown-it-task-lists-CcmDKRtl.js";import"./markdown-it-xss-Brhrdqro.js";import"./xss-BXDl6y0Y.js";import"./cssfilter-uE9E6Id0.js";import"./lru-cache-DUv_w53D.js";import"./@vueuse-5kwDSbK9.js";import"./pinia-DxolVr3A.js";import"./vue-demi-Dq6ymT-8.js";import"./vue-i18n-Af_yDAzr.js";import"./@intlify-DTqJVEQS.js";import"./naive-ui-DtZk0WJ8.js";import"./date-fns-YzY8oSGz.js";import"./vueuc-Bk9f_vlN.js";import"./evtd-hWw0KU7y.js";import"./seemly-B0CCZz1h.js";import"./@css-render-sXtP9vHb.js";import"./vooks-Dg4BxRLw.js";import"./vdirs-aWQMhJPa.js";import"./@juggle-BnTvdTVm.js";import"./css-render-7x70jhNC.js";import"./@emotion-DFFAhID7.js";import"./lodash-es-BqiBNFWB.js";import"./treemate-CC-CeH3d.js";import"./async-validator-Cuo4gI4y.js";import"./vue-echarts-DpynRI6o.js";import"./resize-detector-BnI0Kdmb.js";import"./echarts-BRR8dxA2.js";import"./zrender-BiYmND81.js";import"./tslib-ZseNXxlj.js";import"./vue-router-BiYFwnTs.js";import"./@iconify-BsjoIFlE.js";import"./axios-CURSphCx.js";import"./pinia-plugin-persistedstate-Cs-f0Iqr.js";const n=r({name:"Markdown"}),u=r({...n,props:{editorId:{default:"markRaw_MdEditor"},previewTheme:{default:"default"},codeTheme:{default:"atom"},readOnly:{type:Boolean},mStyle:{default:""},toolbarsExclude:{default:()=>["htmlPreview","codeRow","code","unorderedList","orderedList","quote"]},modelValue:{default:""},uploadImgMethod:{},methodParams:{}},emits:["update:modelValue","save","uploadImg"],setup(r,{emit:p}){const n=r,u=p,j=s({get:()=>n.modelValue,set(e){u("update:modelValue",e)}}),c=o(),h=s((()=>c.isDark?"dark":"light")),v=s((()=>"en"===c.language?"en-US":"zh-CN")),g=(e,o)=>{u("save",e,o)},f=async(e,o)=>{const t=await Promise.all(e.map((e=>new Promise(((o,t)=>{const r=new FormData;r.append("file",e);const s=n.methodParams;s&&Object.keys(s).map((e=>{s.hasOwn(e)&&r.append(e,s[e])}));const m=n.uploadImgMethod;m&&m(s).then((e=>{o(e)})).catch((e=>{t(e)}))})))));o(t.map((e=>e.data.url))),u("uploadImg",t)};return(o,r)=>(m(),i(a(e),{modelValue:a(j),"onUpdate:modelValue":r[0]||(r[0]=e=>d(j)?j.value=e:null),editorId:n.editorId,theme:a(h),language:a(v),previewTheme:n.previewTheme,codeTheme:n.codeTheme,noImgZoomIn:!0,autofocus:!0,"read-only":o.readOnly,style:l(n.mStyle||{height:a(t)("main")}),toolbarsExclude:n.toolbarsExclude,onSave:g,onUploadImg:f},null,8,["modelValue","editorId","theme","language","previewTheme","codeTheme","read-only","style","toolbarsExclude"]))}}),j=r({name:"MarkdownDemo"}),c=r({...j,setup(e){const o=p("Markdown基于[MdEditorV3](https://imzbf.github.io/md-editor-v3/en-US/index)");return(e,t)=>{const r=u;return m(),i(r,{modelValue:a(o),"onUpdate:modelValue":t[0]||(t[0]=e=>d(o)?o.value=e:null)},null,8,["modelValue"])}}});export{c as default};
